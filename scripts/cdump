#!/usr/bin/env python

import argparse

from cdump.database import Database
from cdump.definitions import Definitions
from cdump.parser import Parser
from cdump.xml_dump import XMLDump


def dump_ast(file_path):
    print(XMLDump.FromFilePath(file_path).as_xml())


def dump_definitions(file_path):
    def id_gen():
        id = 1
        while True:
            yield id
            id += 1
    for definition in Parser(id_gen(), XMLDump.FromFilePath(file_path)):
        print(definition)


def dump_to_db(db_file_name, file_paths):
    Database(db_file_name).write_definitions(
        Definitions.FromFilePaths(file_paths)
    )


def main():
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(dest='action')
    dump_subparser = subparsers.add_parser('dump')
    dump_subparser.add_argument('input_file', type=str, help='File to dump')
    parse_subparser = subparsers.add_parser('parse')
    parse_subparser.add_argument('input_file', type=str, help='File to parse')
    db_subparser = subparsers.add_parser('db')
    db_subparser.add_argument(
        '-f', '--file', type=str,
        help='SQLite database file to save definitions in'
    )
    db_subparser.add_argument(
        'input_files', type=str, nargs='+',
        help='Files to process'
    )

    args = parser.parse_args()

    if args.action == 'dump':
        dump_ast(args.input_file)
    elif args.action == 'parse':
        dump_definitions(args.input_file)
    elif args.action == 'db':
        dump_to_db(args.file, args.input_files)


main()
